pipeline {
  agent any
  options {
      disableConcurrentBuilds()
  }
  tools {
    maven 'maven-3.9'
    jdk 'adoptopenjdk-jdk11'
    git 'git-default'
  }
  environment {
    MAVEN_OPTS='-Djava.awt.headless=true -Xmx4096m'
  }
  parameters {
        string name: 'REL_VERSION', defaultValue: "1.3.x", description: 'Next release version'
        string name: 'DEV_VERSION', defaultValue: "1.3.x-SNAPSHOT", description: 'Next snapshot version'
        booleanParam name: 'PERFORM_RELEASE', defaultValue: false, description: 'Perform release build (on main branch only)'
  }
  stages {
    stage('Initialize') {
      steps {
        sh 'mvn --version'
        sh 'java -version'
        sh 'git --version'
      }
    }
    stage('Build') {
      steps {
        sh 'mvn -B -C -fae clean install'
      }
      post {
        always {
          junit '**/target/surefire-reports/*.xml'
        }
        success {
          archiveArtifacts artifacts: 'deegree-ogcapi-webapp/**/*.war'
        }
      }
    }
    stage ('Quality Checks') {
        when {
            branch 'main'
        }
        steps {
            echo 'Quality checking'
            sh 'mvn -B -fae com.github.spotbugs:spotbugs-maven-plugin:spotbugs javadoc:javadoc'
        }
        post {
            always {
                recordIssues enabledForFailure: true, tools: [mavenConsole(), java(), javaDoc(), spotBugs()]
            }
        }
    }
    stage ('Release') {
      when {
          allOf {
              triggeredBy cause: "UserIdCause", detail: "tmc"
              expression { return params.PERFORM_RELEASE }
          }
      }
      steps {
          echo 'Prepare release version ${REL_VERSION}'
          sh 'mvn -Dresume=false -DreleaseVersion=${REL_VERSION} -DdevelopmentVersion=${DEV_VERSION} -DdeployAtEnd=true -Dgoals=deploy release:prepare release:perform'
      }
      post {
          success {
              archiveArtifacts artifacts: '**/target/deegree-ogcapi-webapp-*.war', fingerprint: true
              archiveArtifacts artifacts: '**/target/deegree-ogcapi-documentation*.zip', fingerprint: true
          }
      }
    }
  }
  post {
      always {
          cleanWs notFailBuild: true
      }
  }
}
